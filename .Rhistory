}
boring_function(3)
submit()
boring_function("My first function!")
boring_function
submit()
my_mean
my_mean(c(4,5,10))
remainder <- function(num, divisor = 2) {
# Write your code here!
# Remember: the last expression evaluated will be returned!
result <- num %% divisor
}
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
func(dat)
submit()
evaluate(sd(c(1.4, 3.6, 7.9, 8.8)))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x) {x+1}, 6)
evaluate(function(x) {x[1]}, c(8, 4, 0))
evaluate(function(x) {x[-1]}, c(8, 4, 0))
?paste()
?paste
paste("Programming", "is", "fun")
paste("Programming", "is", "fun!")
submit()
telegram("Rafael", "Estuda", "R")
submit
submit()
submit()
mad_libs(list( place = "Rio", adjective = "good", noun = "rule"))
submit()
submit()
'I' %p% 'love' %p% 'R!'
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
range_list <- lapply(flag_shapes, range)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
mean(c(2,4,6))
vetor <- c(1:5)
vector
vetor
vetor2<- vetor + 5
vetor2
read.table("test.txt")
arquivo <- read.table("test.txt")
head(arquivo)
class(arquivo)
carros<-read.csv("carros")
carros<-read.csv("carros.csv")
?read.csv
carros<-read.csv("carros.csv", header= TRUE, sep = ";")
head(carros)
carros(, 8:9)
class(carros)
carros[,8:9]
numeros <- carros[,8:9]
head(numeros)
saida <- sapply(numeros, mean)
class(numeros[[1]])
carros<-read.csv("carros.csv", header= TRUE, sep = ";", dec=",")
numeros <- carros[,8:9]
head(numeros)
class(numeros[[1]])
saida <- sapply(numeros, mean)
saida
saida <- sapply(numeros, range)
saida
carros[,1] == "Audi"
carros[carros[,1] == "Audi"]
carros[carros[,2] == "Audi"]
carros[,2]=="Audi"
audi <- carros[,carros[,2]=="Audi"]
carros[carros[,2]=="Audi"]
carros(carros[,2]=="Audi")
carros[,2]=="Audi"
audi<-carros[,2]=="Audi"
carros[audi]
audi[carros]
swirl()
TRUE == TRUE
(FALSE == TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints >5
which(ints > 7)
any(ints<0)
all(ints>0)
my_vector <- c(1:20)
my_vector <- c(1:20)
c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
demo()
carros <- read.csv("carros.csv", sep=";", dec = ",")
head(carros)
fuel <- carros[,8:9]
fuel
nome_marca <- "Audi"
carros_audi <- carros[, nome_marca]
carros_audi <- subset(carros, carros$Manufacturer == "Audi")
head(carros_audi[,2])
teste <- carros_audi[,carros_audi$Manufacturer]
teste
rm(teste)
media<- mean(carros_audi[,carros_audi$City.Fuel.Efficiency])
class(carros_audi$Hwy.Fuel.Efficiency)
combustivel <- carros_audi[,carros_audi$Hwy.Fuel.Efficiency]
head(combustivel)
option()
options()
ls
ls(list())
x <- ruinf(20)
x <- runif(20)
x
summary(x)
hist(x)
install.packages("vcd")
help(package="vcd")
library("vcd")
Arthritis
example("Arthritis")
read.csv("hw1_data.csv")
arquivo <- read.csv("hw1_data.csv")
tail(arquivo)
arquivo[47,]
ozone <- arquivo[,arquivo$Ozone]
ozone <- arquivo[,1]
ozone.na <- ozone == NA
ozone.na
sum(ozone.na)
ozone.na <- ozone[is.na(ozone)]
ozone.na
ozone.na[ozone.na == NA]
ozone.na == NA
ozone.na[ozone.na == NA]
s <- NA
s
s == NA
is.na(s)
ozone.na.true <- is.na(ozone.na)
sum(ozone.na.true)
mean(ozone, na.rm = TRUE)
subset_ozone <- subset(arquivo, arquivo$Ozone > 31 & arquivo$Temp < 90)
mean.solar.r <- mean(subset_ozone$Solar.R, na.rm = TRUE)
subset_ozone <- subset(arquivo, arquivo$Ozone > 31 & arquivo$Temp > 90)
mean.solar.r <- mean(subset_ozone$Solar.R, na.rm = TRUE)
temp.month.6 <- arquivo[, arquivo$Month == 6]
temp.month.6 <- arquivo[, arquivo$Month, arquivo$Month == 6]
temp.month.6 <- subset(arquivo, arquivo$Month == 6)
mean(temp.month.6, na.rm = TRUE)
temp.month.6
mean(temp.month.6$Temp, na.rm = TRUE)
may <- subset(arquivo, arquivo$Month==5)
max(may, na.rm = TRUE)
max(may$Ozone, na.rm = TRUE)
z < 3
z <- 3
toString(z, width = 3)
formatC(z, width=3, flag="0")
source("pollutantmean.R")
getwd()
pollutantmean("C:/users/Rafael/Documents/specdata", "nitrate")
source("pollutantmean.R")
getwd()
setwd
setwd("C:/users/Rafael/Documents/")
source("pollutantmean.R")
pollutantmean("C:/users/Rafael/Documents/specdata", "nitrate")
source("pollutantmean.R")
setwd("C:/users/Rafael/Documents/")
source("pollutantmean.R")
pollutantmean("C:/users/Rafael/Documents/specdata", "nitrate")
setwd("C:/users/Rafael/Documents/")
pollutantmean("C:/users/Rafael/Documents/specdata", "nitrate")
getwd()
setwd("C:/users/Rafael/Documents/")
debugSource('~/pollutantmean.R')
pollutantmean("C:/users/Rafael/Documents/specdata", "nitrate")
read.csv("001.csv")
getwd()
read.csv("C:/users/Rafael/Documents/specdata/001.csv")
debugSource('~/pollutantmean.R')
pollutantmean("C:/users/Rafael/Documents/specdata", "nitrate")
getwd()
setwd("C:/users/Rafael/Documents/")
debugSource('~/pollutantmean.R')
debugSource('~/pollutantmean.R')
pollutantmean("C:/users/Rafael/Documents/specdata", "nitrate")
debugSource('~/pollutantmean.R')
pollutantmean("C:/users/Rafael/Documents/specdata", "nitrate")
pollutantmean("C:/users/Rafael/Documents/specdata", "nitrate", c(1:2))
setwd("C:/users/Rafael/Documents/")
source("pollutantmean.R")
pollutantmean("C:/users/Rafael/Documents/specdata", "nitrate", c(1:2))
pollutantmean("C:/users/Rafael/Documents/specdata", "sulfate", c(1:2))
pollutantmean("C:/users/Rafael/Documents/specdata", "sulfate", c(1:10))
pollutantmean("C:/users/Rafael/Documents/specdata", "sulfate", 70:72)
pollutantmean("C:/users/Rafael/Documents/specdata", "nitrate", 70:72)
pollutantmean("C:/users/Rafael/Documents/specdata", "sulfate", 34)
pollutantmean("C:/users/Rafael/Documents/specdata", "nitrate")
source("complete.R")
source("complete.R")
debugSource('~/complete.R')
complete("C:/users/Rafael/Documents/specdata", 1)
source("complete.R")
debugSource('~/complete.R')
complete("C:/users/Rafael/Documents/specdata", 1)
View(condicao)
source("complete.R")
debugSource('~/complete.R')
complete("C:/users/Rafael/Documents/specdata", 1)
complete("C:/users/Rafael/Documents/specdata", 1)
source("complete.R")
debugSource('~/complete.R')
complete("C:/users/Rafael/Documents/specdata", 1)
source("complete.R")
debugSource('~/complete.R')
complete("C:/users/Rafael/Documents/specdata", 1)
debugSource('~/complete.R')
source("complete.R")
complete("C:/users/Rafael/Documents/specdata", 1)
source("complete.R")
debugSource('~/complete.R')
complete("C:/users/Rafael/Documents/specdata", 1)
complete("C:/users/Rafael/Documents/specdata", 1)
debugSource('~/complete.R')
debugSource('~/complete.R')
complete("C:/users/Rafael/Documents/specdata", 1)
complete("C:/users/Rafael/Documents/specdata", 1)
source("complete.R")
complete("C:/users/Rafael/Documents/specdata", 1)
source("complete.R")
complete("C:/users/Rafael/Documents/specdata", 1)
source("complete.R")
debugSource('~/complete.R')
complete("C:/users/Rafael/Documents/specdata", 1)
View(arquivodf)
View(arquivodf)
View(tudo.ok)
View(tudo.ok)
source("complete.R")
debugSource('~/complete.R')
complete("C:/users/Rafael/Documents/specdata", 1)
View(tudo.ok)
View(tudo.ok)
source("complete.R")
debugSource('~/complete.R')
complete("C:/users/Rafael/Documents/specdata", 1)
source("complete.R")
debugSource('~/complete.R')
complete("C:/users/Rafael/Documents/specdata", 1)
View(complete)
View(tudo.ok)
View(tudo.ok)
complete("C:/users/Rafael/Documents/specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("C:/users/Rafael/Documents/specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("C:/users/Rafael/Documents/specdata", c(2, 4, 8, 10, 12))
debugSource('~/complete.R')
complete("C:/users/Rafael/Documents/specdata", c(2, 4, 8, 10, 12))
complete("C:/users/Rafael/Documents/specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("C:/users/Rafael/Documents/specdata", c(2, 4, 8, 10, 12))
source("corr.R")
debugSource('~/corr.R')
complete("C:/users/Rafael/Documents/specdata")
corr("C:/users/Rafael/Documents/specdata", 150)
cr<-corr("C:/users/Rafael/Documents/specdata", 150)
source("corr.R")
cr<-corr("C:/users/Rafael/Documents/specdata", 150)
source("corr.R")
cr<-corr("C:/users/Rafael/Documents/specdata", 150)
head(cr)
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_list <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
str(flags)
summary(flags)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?apply
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x
dimnames(x)[[1]] <- letters[1:8]
x
apply(x, 2, mean, trim = .2)
col.sums <- apply(x, 2, sum)
row.sums <- apply(x, 1, sum)
rbind(cbind(x, Rtot = row.sums), Ctot = c(col.sums, sum(col.sums)))
source("corr.R")
ls()
class(ls())
rm(list = ls())
source("complete.R")
c <- complete("C:/Users/Rafael/Documents/specdata", 1:3)
c
dimnames(c)
names(c)[2] <- c("v", "z")
names(c)[[2] <- c("v", "z")
names(c)[[2]] <- c("v", "z")
names(c)[[2]]
names(c)[[1]]
names(c)[[3]]
names(c)
names(c) <- c("c", "z")
c
install.packages("sqldf")
library("sqldf")
dados <-sqldf("select * from c")
dados
dados <-sqldf("select sum(z) as total from c")
dados
attach(dados)
quantidade <- 3
detach(dados)
attach(dados)
dados$quantidade <- 3
detach(dados)
cbind(c(1), dados)
merge(c, dados, by.x = "c", by.y = "c(1)")
names(dados)[1]
names(dados)[2]
names(dados)[3]
dados <- cbind(1, dados)
dados
names(dados)[1] <- "ID"
dados
result<-merge(c, dados, by.x = "c", by.y = "ID")
result
dados2 <- rbind(dados, c(4, 201, 1))
dados2
result<-merge(c, dados, by.x = "c", by.y = "ID")
result
result.sql <- sqldf("select a.c as ID, a.z as Z, b.total, b.quantidade from c a, full outer join on dados2 b on a.c = b.ID")
result.sql <- sqldf("select a.c as ID, a.z as Z, b.total, b.quantidade from c a, full outer join dados2 b on a.c = b.ID")
result.sql <- sqldf("select a.c as ID, a.z as Z, b.total, b.quantidade from dados2 b left outer join c a on b.ID = a.c")
result.sql
result.sql <- sqldf("select a.c as ID, a.z as Z, b.ID, b.total, b.quantidade from dados2 b left outer join c a on b.ID = a.c")
result.sql
sub.data <- subset(result.sql, result.sql$total > 300, select = c(result.sql$quantidade, result.sql$total))
sub.data <- subset(result.sql, result.sql$total > 300, select = c("quantidade", "total"))
sub.data
View(c)
View(dados2)
result<-merge(c, dados2, by.x = "c", by.y = "ID", all = TRUE)
View(result)
result2 <- na.omit(result)
View(result2)
View(result)
na.exclude(result)
View(result)
carros<-read.csv("carros.csv", sep = ";", dec = ",")
tab_aux <- carros[, c(carros$Manufacturer, carros$City.Fuel.Efficiency, carros$Hwy.Fuel.Efficiency)]
head(tab_aux)
tab_aux <- carros[, c(2, 8, 9)]
head(tab_aux)
media <- tapply(tab_aux, tab_aux$Manufacturer, mean)
?tapply
media <- tapply(tab_aux, tab_aux$Manufacturer, mean)
media <- sapply(tab_aux, mean)
media <- sapply(tab_aux[,c(2:3)], mean)
media
tab_aux <- na.omit(tab_aux)
View(tab_aux)
media <- tapply(tab_aux, tab_aux$Manufacturer, mean)
tab_aux2 <- carros[, c(2, 8)]
media <- tapply(tab_aux2, tab_aux2$Manufacturer, mean)
length(tab_aux$Manufacturer)
length(tab_aux$City.Fuel.Efficiency)
length(tab_aux$Hwy.Fuel.Efficiency)
media <- tapply(tab_aux2$City.Fuel.Efficiency, tab_aux2$Manufacturer, mean)
media
is.atomic(tab_aux)
a <- matrix(nrow = 2, ncol = 2)
a
is.atomic(a)
by(tab_aux[2:3],tab_aux$Manufacturer,FUN=colMeans)
media<-by(tab_aux[2:3],tab_aux$Manufacturer,FUN=colMeans)
media
table(media)
media2<-head(media)
media2
media2<-head(media, 3)
media2
table(media2)
?solve
matrix <- matrix(data = c(3,9,1,0,1,0,2,7,1), nrow = 3, ncol = 3)
matrix
setwd("C:/Users/Rafael/Documents/GitHub/ProgrammingAssignment2")
getwd()
source("cachematrix.R")
mat<-makeCacheMatrix(matrix)
mat
c <- cacheSolve(mat)
c
c <- cacheSolve(mat)
c
